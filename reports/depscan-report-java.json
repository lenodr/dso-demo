{"id": "CVE-2021-30640", "package": "org.apache.tomcat.embed:tomcat-embed-core", "package_type": "org.apache.tomcat", "package_usage": "N/A", "version": ">=9.0.0M1-<9.0.45", "fix_version": "9.0.58", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Authentication Bypass by Alternate Name in Apache Tomcat\nA vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-30640", "https://lists.apache.org/thread.html/r59f9ef03929d32120f91f4ea7e6e79edd5688d75d0a9b65fd26d1fe8%40%3Cannounce.tomcat.apache.org%3E", "https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html", "https://security.netapp.com/advisory/ntap-20210827-0007/", "https://www.debian.org/security/2021/dsa-4952", "https://www.debian.org/security/2021/dsa-4986", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com/security-alerts/cpuoct2021.html"]}
{"id": "CVE-2021-30639", "package": "org.apache.tomcat.embed:tomcat-embed-core", "package_type": "org.apache.tomcat", "package_usage": "N/A", "version": ">=9.0.0-<9.0.45", "fix_version": "9.0.58", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Improper Handling of Exceptional Conditions in Apache Tomcat\nA vulnerability in Apache Tomcat allows an attacker to remotely trigger a denial of service. An error introduced as part of a change to improve error handling during non-blocking I/O meant that the error flag associated with the Request object was not reset between requests. This meant that once a non-blocking I/O error occurred, all future requests handled by that request object would fail. Users were able to trigger non-blocking I/O errors, e.g. by dropping a connection, thereby creating the possibility of triggering a DoS. Applications that do not use non-blocking I/O are not exposed to this vulnerability. This issue affects Apache Tomcat 10.0.3 to 10.0.4; 9.0.44; 8.5.64.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-30639", "https://kc.mcafee.com/corporate/index?page=content&id=SB10366", "https://lists.apache.org/thread.html/r79a7c019712b39aedf7cf4da9276d80610f04441b2a4f6506cb2daaf@%3Cdev.tomcat.apache.org%3E", "https://lists.apache.org/thread.html/r79a7c019712b39aedf7cf4da9276d80610f04441b2a4f6506cb2daaf@%3Cusers.tomcat.apache.org%3E", "https://lists.apache.org/thread.html/rd84fae1f474597bdf358f5bdc0a5c453c507bd527b83e8be6b5ea3f4%40%3Cannounce.tomcat.apache.org%3E", "https://security.netapp.com/advisory/ntap-20210827-0007/", "https://www.oracle.com/security-alerts/cpujan2022.html"]}
{"id": "CVE-2021-33037", "package": "org.apache.tomcat.embed:tomcat-embed-core", "package_type": "org.apache.tomcat", "package_usage": "N/A", "version": ">=9.0.0-M1-<9.0.46", "fix_version": "9.0.58", "severity": "LOW", "cvss_score": "2.0", "short_description": "# HTTP Request Smuggling in Apache Tomcat\nApache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-33037", "https://kc.mcafee.com/corporate/index?page=content&id=SB10366", "https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E", "https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E", "https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E", "https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E", "https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E", "https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E", "https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E", "https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html", "https://security.netapp.com/advisory/ntap-20210827-0007/", "https://www.debian.org/security/2021/dsa-4952", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com/security-alerts/cpuoct2021.html"]}
{"id": "CVE-2021-41079", "package": "org.apache.tomcat.embed:tomcat-embed-core", "package_type": "org.apache.tomcat", "package_usage": "N/A", "version": ">=9.0.0-<9.0.44", "fix_version": "9.0.58", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Infinite loop in Tomcat due to parsing error\nApache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-41079", "https://github.com/apache/tomcat/commit/34115fb3c83f6cd97772232316a492a4cc5729e0", "https://lists.apache.org/thread.html/r6b6b674e3f168dd010e67dbe6848b866e2acf26371452fdae313b98a@%3Cusers.tomcat.apache.org%3E", "https://lists.apache.org/thread.html/rb4de81ac647043541a32881099aa6eb5a23f1b7fd116f713f8ab9dbe@%3Cdev.tomcat.apache.org%3E", "https://lists.apache.org/thread.html/rccdef0349fdf4fb73a4e4403095446d7fe6264e0a58e2df5c6799434%40%3Cannounce.tomcat.apache.org%3E", "https://lists.debian.org/debian-lts-announce/2021/09/msg00012.html", "https://security.netapp.com/advisory/ntap-20211008-0005/", "https://www.debian.org/security/2021/dsa-4986", "https://github.com/apache/tomcat"]}
{"id": "CVE-2021-22060", "package": "org.springframework:spring-core", "package_type": "org.springframework", "package_usage": "N/A", "version": ">=5.3.0-<5.3.14", "fix_version": "5.3.14", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Log entry injection in Spring Framework\nIn Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-22060", "https://tanzu.vmware.com/security/cve-2021-22060"]}
{"id": "CVE-2022-23181", "package": "org.apache.tomcat.embed:tomcat-embed-core", "package_type": "org.apache.tomcat", "package_usage": "N/A", "version": ">=9.0.0-<9.0.58", "fix_version": "9.0.58", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Race condition in Apache Tomcat\nThe fix for bug CVE-2020-9484 introduced a time of check, time of use vulnerability into Apache Tomcat 10.1.0-M1 to 10.1.0-M8, 10.0.0-M5 to 10.0.14, 9.0.35 to 9.0.56 and 8.5.55 to 8.5.73 that allowed a local attacker to perform actions with the privileges of the user that the Tomcat process is using. This issue is only exploitable when Tomcat is configured to persist sessions using the FileStore.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2022-23181", "https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9", "https://security.netapp.com/advisory/ntap-20220217-0010/", "https://github.com/apache/tomcat"]}
{"id": "CVE-2021-31684", "package": "net.minidev:json-smart", "package_type": "net.minidev", "package_usage": "N/A", "version": ">=2.0.0-<2.4.5", "fix_version": "2.4.5", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Out of bounds read in json-smart\nA vulnerability was discovered in the indexOf function of JSONParserByteArray in JSON Smart versions prior to 1.3.3 and 2.4.5 which causes a denial of service (DOS) via a crafted web request.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-31684", "https://github.com/netplex/json-smart-v1/issues/10", "https://github.com/netplex/json-smart-v2/issues/67", "https://github.com/netplex/json-smart-v1/pull/11", "https://github.com/netplex/json-smart-v2/pull/68", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://github.com/netplex/json-smart-v1"]}
{"id": "CVE-2021-27568", "package": "net.minidev:json-smart", "package_type": "net.minidev", "package_usage": "N/A", "version": ">=2.0.0-<2.3.1", "fix_version": "2.4.5", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Improper Check for Unusual or Exceptional Conditions in json-smart\nAn issue was discovered in netplex json-smart-v1 through 2015-10-23 and json-smart-v2 through 2.4. An exception is thrown from a function, but it is not caught, as demonstrated by NumberFormatException. When it is not caught, it may cause programs using the library to crash or expose sensitive information.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-27568", "https://github.com/netplex/json-smart-v1/issues/7", "https://github.com/netplex/json-smart-v2/issues/60", "https://github.com/netplex/json-smart-v2/issues/62", "https://github.com/netplex/json-smart-v2/pull/72", "https://github.com/netplex/json-smart-v1/commit/768db58ee0e3e344fcdb574b7629765308a1d0af", "https://lists.apache.org/thread.html/rb6287f5aa628c8d9af52b5401ec6cc51b6fc28ab20d318943453e396@%3Ccommits.druid.apache.org%3E", "https://lists.apache.org/thread.html/re237267da268c690df5e1c6ea6a38a7fc11617725e8049490f58a6fa@%3Ccommits.druid.apache.org%3E", "https://lists.apache.org/thread.html/rf70210b4d63191c0bfb2a0d5745e104484e71703bf5ad9cb01c980c6@%3Ccommits.druid.apache.org%3E", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://www.oracle.com/security-alerts/cpujan2022.html"]}
{"id": "CVE-2021-42340", "package": "org.apache.tomcat.embed:tomcat-embed-core", "package_type": "org.apache.tomcat", "package_usage": "N/A", "version": ">=9.0.40-<9.0.54", "fix_version": "9.0.58", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Missing Release of Resource after Effective Lifetime in Apache Tomcat\nThe fix for bug 63362 present in Apache Tomcat 10.1.0-M1 to 10.1.0-M5, 10.0.0-M1 to 10.0.11, 9.0.40 to 9.0.53 and 8.5.60 to 8.5.71 introduced a memory leak. The object introduced to collect metrics for HTTP upgrade connections was not released for WebSocket connections once the connection was closed. This created a memory leak that, over time, could lead to a denial of service via an OutOfMemoryError.\n\n            ", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-42340", "https://lists.apache.org/thread.html/r8097a2d1550aa78e585fc77e602b9046e6d4099d8d132497c5387784@%3Ccommits.myfaces.apache.org%3E", "https://lists.apache.org/thread.html/r83a35be60f06aca2065f188ee542b9099695d57ced2e70e0885f905c%40%3Cannounce.tomcat.apache.org%3E", "https://security.netapp.com/advisory/ntap-20211104-0001/", "https://www.debian.org/security/2021/dsa-5009", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://github.com/apache/tomcat"]}
{"id": "CVE-2021-44228", "package": "org.apache.logging.log4j:log4j-api", "package_type": "apache", "package_usage": "N/A", "version": ">=2.13.0-<2.15.0", "fix_version": "2.17.1", "severity": "CRITICAL", "cvss_score": "10.0", "short_description": "Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.", "related_urls": ["https://logging.apache.org/log4j/2.x/security.html", "http://www.openwall.com/lists/oss-security/2021/12/10/1", "http://www.openwall.com/lists/oss-security/2021/12/10/2", "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html", "https://security.netapp.com/advisory/ntap-20211210-0007/", "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd", "http://www.openwall.com/lists/oss-security/2021/12/10/3", "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032", "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VU57UJDCFIASIO35GC55JMKSRXJMCDFM/", "http://www.openwall.com/lists/oss-security/2021/12/13/1", "http://www.openwall.com/lists/oss-security/2021/12/13/2", "https://twitter.com/kurtseifried/status/1469345530182455296", "https://lists.debian.org/debian-lts-announce/2021/12/msg00007.html", "https://www.debian.org/security/2021/dsa-5020", "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf", "http://packetstormsecurity.com/files/165270/Apache-Log4j2-2.14.1-Remote-Code-Execution.html", "http://packetstormsecurity.com/files/165260/VMware-Security-Advisory-2021-0028.html", "http://packetstormsecurity.com/files/165261/Apache-Log4j2-2.14.1-Information-Disclosure.html", "http://www.openwall.com/lists/oss-security/2021/12/14/4", "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html", "https://www.kb.cert.org/vuls/id/930724", "http://packetstormsecurity.com/files/165282/Log4j-Payload-Generator.html", "http://packetstormsecurity.com/files/165281/Log4j2-Log4Shell-Regexes.html", "http://packetstormsecurity.com/files/165306/L4sh-Log4j-Remote-Code-Execution.html", "http://packetstormsecurity.com/files/165307/Log4j-Remote-Code-Execution-Word-Bypassing.html", "http://packetstormsecurity.com/files/165311/log4j-scan-Extensive-Scanner.html", "http://www.openwall.com/lists/oss-security/2021/12/15/3", "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf", "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/", "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd", "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf", "http://packetstormsecurity.com/files/165371/VMware-Security-Advisory-2021-0028.4.html", "https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf", "http://packetstormsecurity.com/files/165532/Log4Shell-HTTP-Header-Injection.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M5CSVUNV4HWZZXGOKNSK6L7RPM7BOKIB/", "https://github.com/cisagov/log4j-affected-db/blob/develop/SOFTWARE-LIST.md", "http://packetstormsecurity.com/files/165642/VMware-vCenter-Server-Unauthenticated-Log4Shell-JNDI-Injection-Remote-Code-Execution.html", "http://packetstormsecurity.com/files/165673/UniFi-Network-Application-Unauthenticated-Log4Shell-Remote-Code-Execution.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://github.com/cisagov/log4j-affected-db", "https://www.bentley.com/en/common-vulnerability-exposure/be-2022-0001", "https://support.apple.com/kb/HT213189", "http://seclists.org/fulldisclosure/2022/Mar/23"]}
{"id": "CVE-2021-44832", "package": "org.apache.logging.log4j:log4j-api", "package_type": "apache", "package_usage": "N/A", "version": ">=2.13.0-<2.17.1", "fix_version": "2.17.1", "severity": "MEDIUM", "cvss_score": "6.6", "short_description": "Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.", "related_urls": ["https://lists.apache.org/thread/s1o5vlo78ypqxnzn6p8zf6t9shtq5143", "https://issues.apache.org/jira/browse/LOG4J2-3293", "http://www.openwall.com/lists/oss-security/2021/12/28/1", "https://cert-portal.siemens.com/productcert/pdf/ssa-784507.pdf", "https://lists.debian.org/debian-lts-announce/2021/12/msg00036.html", "https://security.netapp.com/advisory/ntap-20220104-0001/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T57MPJUW3MA6QGWZRTMCHHMMPQNVKGFC/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EVV25FXL4FU5X6X5BSL7RLQ7T6F65MRA/", "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd", "https://www.oracle.com/security-alerts/cpujan2022.html"]}
{"id": "CVE-2021-45046", "package": "org.apache.logging.log4j:log4j-api", "package_type": "apache", "package_usage": "N/A", "version": ">=2.13.0-<2.16.0", "fix_version": "2.17.1", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.", "related_urls": ["http://www.openwall.com/lists/oss-security/2021/12/14/4", "https://logging.apache.org/log4j/2.x/security.html", "https://www.cve.org/CVERecord?id=CVE-2021-44228", "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html", "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd", "http://www.openwall.com/lists/oss-security/2021/12/15/3", "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf", "https://www.kb.cert.org/vuls/id/930724", "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf", "https://www.debian.org/security/2021/dsa-5022", "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html", "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032", "http://www.openwall.com/lists/oss-security/2021/12/18/1", "https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf", "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/", "https://www.oracle.com/security-alerts/cpujan2022.html"]}
{"id": "CVE-2021-45105", "package": "org.apache.logging.log4j:log4j-api", "package_type": "apache", "package_usage": "N/A", "version": ">=2.13.0-<=2.16.0", "fix_version": "2.17.1", "severity": "MEDIUM", "cvss_score": "5.9", "short_description": "Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.", "related_urls": ["https://logging.apache.org/log4j/2.x/security.html", "https://security.netapp.com/advisory/ntap-20211218-0001/", "http://www.openwall.com/lists/oss-security/2021/12/19/1", "https://www.debian.org/security/2021/dsa-5024", "https://www.zerodayinitiative.com/advisories/ZDI-21-1541/", "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd", "https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf", "https://www.kb.cert.org/vuls/id/930724", "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032", "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf", "https://www.oracle.com/security-alerts/cpujan2022.html"]}
